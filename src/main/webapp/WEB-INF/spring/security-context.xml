<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<bean id="customAccessDenied"
		class="org.zerock.security.CustomAccessDeniedHandler"></bean>

	<bean id="customLoginSuccess"
		class="org.zerock.security.CustomLoginSuccessHandler"></bean>

	<bean id="customPasswordEncoder"
		class="org.zerock.security.CustomNoOpPasswordEncoder">
	</bean>
	<!--비밀번호 암호화 하기위한 클래스 해시함수로 특정 문자열을 암호화하고 체크하는 쪽에서는 암호화된 패스워드가 사용가능한 패스워드인지만 
		확인하고 다시 원문으로 되돌릴수없음 스프링 시큐리티에서 해당 api를 제공해주고있음 -->
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>
	<bean id="customUserDetailsService"
		class="org.zerock.security.CustomUserDetailsService"></bean>
	<security:http>

		<security:intercept-url pattern="/sample/all"
			access="permitAll" />
		<security:intercept-url
			pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />

		<security:intercept-url pattern="/sample/admin"
			access="hasRole('ROLE_ADMIN')" />

		<!-- <security:access-denied-handler error-page="/sample/accessError"/> -->
		<security:access-denied-handler
			ref="customAccessDenied" />
		<!-- <security:form-login /> -->
		<security:form-login
			login-page="/sample/customLogin"
			authentication-success-handler-ref="customLoginSuccess" />

		<security:logout logout-url="/customLogout"
			invalidate-session="true" />

	</security:http>



	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<!-- <security:jdbc-user-service data-source-ref="dataSource" /> -->			<!-- Bcrypt로 바꾸기 <security:password-encoder ref="customPasswordEncoder" /> -->

			<security:password-encoder
				ref="bcryptPasswordEncoder" />

		</security:authentication-provider>

	</security:authentication-manager>
</beans>
